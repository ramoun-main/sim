--[[ local maps = { i = {}, n = {}, v = {}, t = {} } ]]
--

-- Modes
--   normal_mode = "n",
--   insert_mode = "i",
--   visual_mode = "v",
--   visual_block_mode = "x",
--   term_mode = "t",
--   command_mode = "c",
--

--[[ map('n', '<leader>tp', ':tabp<CR>', { desc = 'go to previous tab' }) ]]

--[[ map('n', '<leader>tn', ':tabn<CR>', { desc = 'go to next tab tab' }) ]]

-- NOP!!!
--
-- vim.keymap.set("n", "Q", "<nop>", {desc='"no operation." It essentially disables the mapping and makes the key sequence do nothing'})
-- vim.keymap.set("n", "<Left>", "<nop>")
-- vim.keymap.set("n", "<Right>", "<nop>")
-- vim.keymap.set("n", "<Up>", "<nop>")
--
--[[ maps.n["<leader>gc"] = { function() require("telescope.builtin").git_commits() end, desc = "Git commits" } ]]
--
-- find
-- if is_available('telescope.nvim') then
--[[ maps.n["<leader>f"] = sections.f ]]
--[[ maps.n["<leader>g"] = sections.g ]]
--[[ map('<leader>fa', function() ]]
--[[   local cwd = vim.fn.stdpath('config') .. '/..' ]]
--[[   local search_dirs = {} ]]
--[[   for _, dir in ipairs(astronvim.supported_configs) do -- search all supported config locations ]]
--[[     if dir == astronvim.install.home then ]]
--[[       dir = dir .. '/lua/user' ]]
--[[     end -- don't search the astronvim core files ]]
--[[     if vim.fn.isdirectory(dir) == 1 then ]]
--[[       table.insert(search_dirs, dir) ]]
--[[     end -- add directory to search if exists ]]
--[[   end ]]
--[[   if vim.tbl_isempty(search_dirs) then -- if no config folders found, show warning ]]
--[[     utils.notify('No user configuration files found', vim.log.levels.WARN) ]]
--[[   else ]]
--[[     if #search_dirs == 1 then ]]
--[[       cwd = search_dirs[1] ]]
--[[     end -- if only one directory, focus cwd ]]
--[[     require('telescope.builtin').find_files({ ]]
--[[       prompt_title = 'Config Files', ]]
--[[       search_dirs = search_dirs, ]]
--[[       cwd = cwd, ]]
--[[     }) -- call telescope ]]
--[[   end ]]
--[[ end, { desc = 'Find config files' }) ]]
--

--[[ maps.n["<leader>l"] = sections.l ]]
